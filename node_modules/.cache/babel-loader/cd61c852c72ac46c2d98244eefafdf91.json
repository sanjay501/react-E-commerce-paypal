{"ast":null,"code":"import _objectSpread from \"/Users/sanjayprajapati/Desktop/shopping-summary/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sanjayprajapati/Desktop/shopping-summary/src/context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext(); //Provider : provides data\n//Consumer : access data\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0,\n      cartCount: 0\n    };\n\n    this.setProducts = () => {\n      let tempproducts = [];\n      storeProducts.forEach(item => {\n        const singleitem = _objectSpread({}, item); //three dots indicate comping value not referencing\n\n\n        tempproducts.push(singleitem);\n      });\n      this.setState(() => {\n        return {\n          products: tempproducts\n        };\n      });\n    };\n\n    this.setCartCount = () => {\n      let count = 0;\n      this.state.cart.forEach(item => {\n        count = count + item.count;\n      });\n      this.setState(() => {\n        return {\n          cartCount: this.state.cart.length\n        };\n      });\n    };\n\n    this.resetProducts = (storelist, tag) => {\n      let reproducts = [];\n      storelist.forEach(item => {\n        let newitem = _objectSpread({}, item);\n\n        console.log(newitem);\n        reproducts.push(newitem);\n      });\n      console.log(\"resetproducts\", reproducts);\n      this.setState(() => {\n        return {\n          products: reproducts\n        };\n      }, () => {\n        this.filter(tag);\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      console.log(product);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.search = value => {\n      console.log(\"hello from search method\", {\n        value\n      });\n\n      if (value == \"\") {\n        this.setProducts();\n      } else {\n        let tempProduct = [...this.state.products];\n        let filteredcart = [];\n        var regex = new RegExp(value);\n        tempProduct.map(item => {\n          if (item.title.match(regex)) {\n            filteredcart.push(item);\n          }\n\n          console.log(filteredcart, regex);\n        });\n        this.setState(() => {\n          return {\n            products: filteredcart\n          };\n        });\n      }\n    };\n\n    this.filter = tag => {\n      let tempProduct = [...this.state.products];\n      let filteredcart = [];\n      tempProduct.map(item => {\n        if (item.company == tag) {\n          filteredcart.push(item);\n        }\n      });\n      this.setState(() => {\n        return {\n          products: filteredcart\n        };\n      }, () => {\n        console.log(\"filter \", this.state.products);\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProduct = [...this.state.products];\n      let tempcart = [...this.state.cart];\n      const index = this.state.products.indexOf(this.getItem(id));\n      const product = tempProduct[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      tempcart.push(product);\n      this.setState(() => {\n        return {\n          products: tempProduct,\n          cart: tempcart\n        };\n      }, () => {\n        this.getTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      console.log(\"hello from increment method\");\n      let tempcart = [...this.state.cart];\n      const index = tempcart.indexOf(this.getItem(id));\n      const product = tempcart[index];\n      product.count++;\n      const price = product.price;\n      product.total = price * product.count;\n      this.setState(() => {\n        return {\n          cart: tempcart\n        };\n      }, () => {\n        this.getTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempcart = [...this.state.cart];\n      const index = tempcart.indexOf(this.getItem(id));\n      const product = tempcart[index];\n      product.count--; //console.log(product.count, typeof product.count);\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        const price = product.price;\n        product.total = price * product.count;\n        this.setState(() => {\n          return {\n            cart: tempcart\n          };\n        }, () => {\n          this.getTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProduct = [...this.state.products];\n      let tempcart = [...this.state.cart];\n      const index = tempcart.indexOf(this.getItem(id));\n      const product = tempcart[index];\n      tempcart.splice(index, 1);\n      product.inCart = false;\n      this.setState(() => {\n        return {\n          products: tempProduct,\n          cart: tempcart\n        };\n      }, () => {\n        this.getTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      console.log(\"hello from clear cart method\");\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n      });\n    };\n\n    this.getTotals = () => {\n      const cart = [...this.state.cart];\n      let subtotal = 0;\n      let tax = 0;\n      let grandtotal = 0;\n      cart.map(item => {\n        subtotal += item.total;\n      });\n      tax = subtotal * 0.13;\n      grandtotal = subtotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subtotal.toFixed(2),\n          cartTax: tax.toFixed(2),\n          cartTotal: grandtotal.toFixed(2)\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart,\n        search: this.search,\n        filter: this.filter,\n        resetProducts: this.resetProducts\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/sanjayprajapati/Desktop/shopping-summary/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","cartCount","setProducts","tempproducts","forEach","item","singleitem","push","setState","setCartCount","count","length","resetProducts","storelist","tag","reproducts","newitem","console","log","filter","getItem","id","product","find","handleDetail","search","value","tempProduct","filteredcart","regex","RegExp","map","title","match","company","addToCart","tempcart","index","indexOf","inCart","price","total","getTotals","openModal","closeModal","increment","decrement","removeItem","splice","clearCart","subtotal","tax","grandtotal","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext();\n//Provider : provides data\n//Consumer : access data\n\nclass ProductProvider extends Component {\n  state = {\n    products: [],\n    detailProduct: detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0,\n    cartCount: 0\n  };\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  setProducts = () => {\n    let tempproducts = [];\n    storeProducts.forEach(item => {\n      const singleitem = { ...item }; //three dots indicate comping value not referencing\n      tempproducts.push(singleitem);\n    });\n    this.setState(() => {\n      return { products: tempproducts };\n    });\n  };\n  setCartCount = () => {\n    let count = 0;\n    this.state.cart.forEach(item => {\n      count = count + item.count;\n    });\n    this.setState(() => {\n      return { cartCount: this.state.cart.length };\n    });\n  };\n\n  resetProducts = (storelist, tag) => {\n    let reproducts = [];\n    storelist.forEach(item => {\n      let newitem = { ...item };\n      console.log(newitem);\n      reproducts.push(newitem);\n    });\n    console.log(\"resetproducts\", reproducts);\n    this.setState(\n      () => {\n        return { products: reproducts };\n      },\n      () => {\n        this.filter(tag);\n      }\n    );\n  };\n\n  getItem = id => {\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n  };\n\n  handleDetail = id => {\n    const product = this.getItem(id);\n    console.log(product);\n    this.setState(() => {\n      return { detailProduct: product };\n    });\n  };\n\n  search = value => {\n    console.log(\"hello from search method\", { value });\n\n    if (value == \"\") {\n      this.setProducts();\n    } else {\n      let tempProduct = [...this.state.products];\n      let filteredcart = [];\n      var regex = new RegExp(value);\n\n      tempProduct.map(item => {\n        if (item.title.match(regex)) {\n          filteredcart.push(item);\n        }\n        console.log(filteredcart, regex);\n      });\n      this.setState(() => {\n        return {\n          products: filteredcart\n        };\n      });\n    }\n  };\n\n  filter = tag => {\n    let tempProduct = [...this.state.products];\n    let filteredcart = [];\n    tempProduct.map(item => {\n      if (item.company == tag) {\n        filteredcart.push(item);\n      }\n    });\n    this.setState(\n      () => {\n        return {\n          products: filteredcart\n        };\n      },\n      () => {\n        console.log(\"filter \", this.state.products);\n      }\n    );\n  };\n\n  addToCart = id => {\n    let tempProduct = [...this.state.products];\n    let tempcart = [...this.state.cart];\n    const index = this.state.products.indexOf(this.getItem(id));\n    const product = tempProduct[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    tempcart.push(product);\n    this.setState(\n      () => {\n        return {\n          products: tempProduct,\n          cart: tempcart\n        };\n      },\n      () => {\n        this.getTotals();\n      }\n    );\n  };\n  openModal = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return {\n        modalProduct: product,\n        modalOpen: true\n      };\n    });\n  };\n\n  closeModal = () => {\n    this.setState(() => {\n      return {\n        modalOpen: false\n      };\n    });\n  };\n\n  increment = id => {\n    console.log(\"hello from increment method\");\n    let tempcart = [...this.state.cart];\n    const index = tempcart.indexOf(this.getItem(id));\n    const product = tempcart[index];\n    product.count++;\n    const price = product.price;\n    product.total = price * product.count;\n    this.setState(\n      () => {\n        return {\n          cart: tempcart\n        };\n      },\n      () => {\n        this.getTotals();\n      }\n    );\n  };\n\n  decrement = id => {\n    let tempcart = [...this.state.cart];\n    const index = tempcart.indexOf(this.getItem(id));\n    const product = tempcart[index];\n    product.count--;\n    //console.log(product.count, typeof product.count);\n    if (product.count === 0) {\n      this.removeItem(id);\n    } else {\n      const price = product.price;\n      product.total = price * product.count;\n      this.setState(\n        () => {\n          return {\n            cart: tempcart\n          };\n        },\n        () => {\n          this.getTotals();\n        }\n      );\n    }\n  };\n  removeItem = id => {\n    let tempProduct = [...this.state.products];\n    let tempcart = [...this.state.cart];\n    const index = tempcart.indexOf(this.getItem(id));\n    const product = tempcart[index];\n    tempcart.splice(index, 1);\n    product.inCart = false;\n    this.setState(\n      () => {\n        return {\n          products: tempProduct,\n          cart: tempcart\n        };\n      },\n      () => {\n        this.getTotals();\n      }\n    );\n  };\n  clearCart = () => {\n    console.log(\"hello from clear cart method\");\n    this.setState(\n      () => {\n        return {\n          cart: []\n        };\n      },\n      () => {\n        this.setProducts();\n      }\n    );\n  };\n  getTotals = () => {\n    const cart = [...this.state.cart];\n    let subtotal = 0;\n    let tax = 0;\n    let grandtotal = 0;\n    cart.map(item => {\n      subtotal += item.total;\n    });\n    tax = subtotal * 0.13;\n    grandtotal = subtotal + tax;\n    this.setState(() => {\n      return {\n        cartSubTotal: subtotal.toFixed(2),\n        cartTax: tax.toFixed(2),\n        cartTotal: grandtotal.toFixed(2)\n      };\n    });\n  };\n\n  render() {\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart,\n          search: this.search,\n          filter: this.filter,\n          resetProducts: this.resetProducts\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}