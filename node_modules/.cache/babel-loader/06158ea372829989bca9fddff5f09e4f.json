{"ast":null,"code":"import _objectSpread from \"/Users/sanjayprajapati/Desktop/shopping-summary/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sanjayprajapati/Desktop/shopping-summary/src/context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext(); //Provider : provides data\n//Consumer : access data\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0,\n      cartCount: 0\n    };\n\n    this.setProducts = () => {\n      let tempproducts = [];\n      storeProducts.forEach(item => {\n        const singleitem = _objectSpread({}, item); //three dots indicate comping value not referencing\n\n\n        tempproducts.push(singleitem);\n      });\n      this.setState(() => {\n        return {\n          products: tempproducts\n        };\n      });\n    };\n\n    this.setCartCount = () => {\n      let count = 0;\n      this.state.cart.forEach(item => {\n        count = count + item.count;\n      });\n      this.setState(() => {\n        return {\n          cartCount: count\n        };\n      });\n    };\n\n    this.resetProducts = (storelist, tag) => {\n      if (tag == \"reset\") {\n        this.setProducts();\n      } else {\n        let reproducts = [];\n        storelist.forEach(item => {\n          let newitem = _objectSpread({}, item);\n\n          console.log(newitem);\n          reproducts.push(newitem);\n        });\n        console.log(\"resetproducts\", reproducts);\n        this.setState(() => {\n          return {\n            products: reproducts\n          };\n        });\n      }\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      console.log(product);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.search = value => {\n      console.log(\"hello from search method\", {\n        value\n      });\n\n      if (value == \"\") {\n        this.setProducts();\n      } else {\n        let tempProduct = [...this.state.products];\n        let filteredcart = [];\n        var regex = new RegExp(value);\n        tempProduct.map(item => {\n          if (item.title.match(regex)) {\n            filteredcart.push(item);\n          }\n\n          console.log(filteredcart, regex);\n        });\n        this.setState(() => {\n          return {\n            products: filteredcart\n          };\n        });\n      }\n    };\n\n    this.filter = tag => {\n      let tempProduct = [...this.state.products];\n      let filteredcart = [];\n      tempProduct.map(item => {\n        if (item.company == tag) {\n          filteredcart.push(item);\n        }\n      });\n      this.setState(() => {\n        return {\n          products: filteredcart\n        };\n      }, () => {\n        console.log(\"filter \", this.state.products);\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProduct = [...this.state.products];\n      let tempcart = [...this.state.cart];\n      const index = this.state.products.indexOf(this.getItem(id));\n      const product = tempProduct[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      tempcart.push(product);\n      this.setState(() => {\n        return {\n          products: tempProduct,\n          cart: tempcart\n        };\n      }, () => {\n        this.getTotals();\n        this.setCartCount();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      console.log(\"hello from increment method\");\n      let tempcart = [...this.state.cart];\n      const index = tempcart.indexOf(this.getItem(id));\n      const product = tempcart[index];\n      product.count++;\n      const price = product.price;\n      product.total = price * product.count;\n      this.setState(() => {\n        return {\n          cart: tempcart\n        };\n      }, () => {\n        this.getTotals();\n        this.setCartCount();\n      });\n    };\n\n    this.decrement = id => {\n      let tempcart = [...this.state.cart];\n      const index = tempcart.indexOf(this.getItem(id));\n      const product = tempcart[index];\n      product.count--; //console.log(product.count, typeof product.count);\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        const price = product.price;\n        product.total = price * product.count;\n        this.setState(() => {\n          return {\n            cart: tempcart\n          };\n        }, () => {\n          this.getTotals();\n          this.setCartCount();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProduct = [...this.state.products];\n      let tempcart = [...this.state.cart];\n      const index = tempcart.indexOf(this.getItem(id));\n      const product = tempcart[index];\n      tempcart.splice(index, 1);\n      product.inCart = false;\n      this.setState(() => {\n        return {\n          products: tempProduct,\n          cart: tempcart\n        };\n      }, () => {\n        this.getTotals();\n        this.setCartCount();\n      });\n    };\n\n    this.clearCart = () => {\n      console.log(\"hello from clear cart method\");\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.setCartCount();\n      });\n    };\n\n    this.getTotals = () => {\n      const cart = [...this.state.cart];\n      let subtotal = 0;\n      let tax = 0;\n      let grandtotal = 0;\n      cart.map(item => {\n        subtotal += item.total;\n      });\n      tax = subtotal * 0.13;\n      grandtotal = subtotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subtotal.toFixed(2),\n          cartTax: tax.toFixed(2),\n          cartTotal: grandtotal.toFixed(2)\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        setProducts: this.setProducts,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart,\n        search: this.search,\n        filter: this.filter,\n        resetProducts: this.resetProducts,\n        setCartCount: this.setCartCount\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/sanjayprajapati/Desktop/shopping-summary/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","cartCount","setProducts","tempproducts","forEach","item","singleitem","push","setState","setCartCount","count","resetProducts","storelist","tag","reproducts","newitem","console","log","getItem","id","product","find","handleDetail","search","value","tempProduct","filteredcart","regex","RegExp","map","title","match","filter","company","addToCart","tempcart","index","indexOf","inCart","price","total","getTotals","openModal","closeModal","increment","decrement","removeItem","splice","clearCart","subtotal","tax","grandtotal","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from \"./data\";\nconst ProductContext = React.createContext();\n//Provider : provides data\n//Consumer : access data\n\nclass ProductProvider extends Component {\n  state = {\n    products: [],\n    detailProduct: detailProduct,\n    cart: [],\n    modalOpen: false,\n    modalProduct: detailProduct,\n    cartSubTotal: 0,\n    cartTax: 0,\n    cartTotal: 0,\n    cartCount: 0\n  };\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  setProducts = () => {\n    let tempproducts = [];\n    storeProducts.forEach(item => {\n      const singleitem = { ...item }; //three dots indicate comping value not referencing\n      tempproducts.push(singleitem);\n    });\n    this.setState(() => {\n      return { products: tempproducts };\n    });\n  };\n  setCartCount = () => {\n    let count = 0;\n    this.state.cart.forEach(item => {\n      count = count + item.count;\n    });\n    this.setState(() => {\n      return { cartCount: count };\n    });\n  };\n\n  resetProducts = (storelist, tag) => {\n    if (tag == \"reset\") {\n      this.setProducts();\n    } else {\n      let reproducts = [];\n      storelist.forEach(item => {\n        let newitem = { ...item };\n        console.log(newitem);\n        reproducts.push(newitem);\n      });\n      console.log(\"resetproducts\", reproducts);\n      this.setState(\n        () => {\n          return { products: reproducts };\n        }\n      );\n\n    }\n\n  };\n\n  getItem = id => {\n    const product = this.state.products.find(item => item.id === id);\n    return product;\n  };\n\n  handleDetail = id => {\n    const product = this.getItem(id);\n    console.log(product);\n    this.setState(() => {\n      return { detailProduct: product };\n    });\n  };\n\n  search = value => {\n    console.log(\"hello from search method\", { value });\n\n    if (value == \"\") {\n      this.setProducts();\n    } else {\n      let tempProduct = [...this.state.products];\n      let filteredcart = [];\n      var regex = new RegExp(value);\n\n      tempProduct.map(item => {\n        if (item.title.match(regex)) {\n          filteredcart.push(item);\n        }\n        console.log(filteredcart, regex);\n      });\n      this.setState(() => {\n        return {\n          products: filteredcart\n        };\n      });\n    }\n  };\n\n  filter = tag => {\n    let tempProduct = [...this.state.products];\n    let filteredcart = [];\n    tempProduct.map(item => {\n      if (item.company == tag) {\n        filteredcart.push(item);\n      }\n    });\n    this.setState(\n      () => {\n        return {\n          products: filteredcart\n        };\n      },\n      () => {\n        console.log(\"filter \", this.state.products);\n      }\n    );\n  };\n\n  addToCart = id => {\n    let tempProduct = [...this.state.products];\n    let tempcart = [...this.state.cart];\n    const index = this.state.products.indexOf(this.getItem(id));\n    const product = tempProduct[index];\n    product.inCart = true;\n    product.count = 1;\n    const price = product.price;\n    product.total = price;\n    tempcart.push(product);\n    this.setState(\n      () => {\n        return {\n          products: tempProduct,\n          cart: tempcart\n        };\n      },\n      () => {\n        this.getTotals();\n        this.setCartCount();\n      }\n    );\n  };\n  openModal = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return {\n        modalProduct: product,\n        modalOpen: true\n      };\n    });\n  };\n\n  closeModal = () => {\n    this.setState(() => {\n      return {\n        modalOpen: false\n      };\n    });\n  };\n\n  increment = id => {\n    console.log(\"hello from increment method\");\n    let tempcart = [...this.state.cart];\n    const index = tempcart.indexOf(this.getItem(id));\n    const product = tempcart[index];\n    product.count++;\n    const price = product.price;\n    product.total = price * product.count;\n    this.setState(\n      () => {\n        return {\n          cart: tempcart\n        };\n      },\n      () => {\n        this.getTotals();\n        this.setCartCount();\n      }\n    );\n  };\n\n  decrement = id => {\n    let tempcart = [...this.state.cart];\n    const index = tempcart.indexOf(this.getItem(id));\n    const product = tempcart[index];\n    product.count--;\n    //console.log(product.count, typeof product.count);\n    if (product.count === 0) {\n      this.removeItem(id);\n    } else {\n      const price = product.price;\n      product.total = price * product.count;\n      this.setState(\n        () => {\n          return {\n            cart: tempcart\n          };\n        },\n        () => {\n          this.getTotals();\n          this.setCartCount();\n        }\n      );\n    }\n  };\n  removeItem = id => {\n    let tempProduct = [...this.state.products];\n    let tempcart = [...this.state.cart];\n    const index = tempcart.indexOf(this.getItem(id));\n    const product = tempcart[index];\n    tempcart.splice(index, 1);\n    product.inCart = false;\n    this.setState(\n      () => {\n        return {\n          products: tempProduct,\n          cart: tempcart\n        };\n      },\n      () => {\n        this.getTotals();\n        this.setCartCount();\n      }\n    );\n  };\n  clearCart = () => {\n    console.log(\"hello from clear cart method\");\n    this.setState(\n      () => {\n        return {\n          cart: []\n        };\n      },\n      () => {\n        this.setProducts();\n        this.setCartCount();\n      }\n    );\n  };\n  getTotals = () => {\n    const cart = [...this.state.cart];\n    let subtotal = 0;\n    let tax = 0;\n    let grandtotal = 0;\n    cart.map(item => {\n      subtotal += item.total;\n    });\n    tax = subtotal * 0.13;\n    grandtotal = subtotal + tax;\n    this.setState(() => {\n      return {\n        cartSubTotal: subtotal.toFixed(2),\n        cartTax: tax.toFixed(2),\n        cartTotal: grandtotal.toFixed(2)\n      };\n    });\n  };\n\n  render() {\n    return (\n      <ProductContext.Provider\n        value={{\n          ...this.state,\n          setProducts: this.setProducts,\n          handleDetail: this.handleDetail,\n          addToCart: this.addToCart,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n          increment: this.increment,\n          decrement: this.decrement,\n          removeItem: this.removeItem,\n          clearCart: this.clearCart,\n          search: this.search,\n          filter: this.filter,\n          resetProducts: this.resetProducts,\n          setCartCount: this.setCartCount\n        }}\n      >\n        {this.props.children}\n      </ProductContext.Provider>\n    );\n  }\n}\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}